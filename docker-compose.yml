# Docker Compose for local development and testing
version: '3.8'

services:
  # PostgreSQL Database for local development
  postgres:
    image: postgres:15
    container_name: wedding_db
    environment:
      POSTGRES_DB: wedding_invitation_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: devpassword123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - wedding_network

  # Web Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wedding_app
    depends_on:
      - postgres
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=wedding_invitation_db;Username=postgres;Password=devpassword123
      - AllowedHosts=*
      - Logging__LogLevel__Default=Information
      - Logging__LogLevel__Microsoft.AspNetCore=Warning
      - FileUpload__MaxSizeBytes=10485760
      - FileUpload__AllowedImageTypes__0=.jpg
      - FileUpload__AllowedImageTypes__1=.jpeg
      - FileUpload__AllowedImageTypes__2=.png
      - FileUpload__AllowedImageTypes__3=.gif
      - FileUpload__AllowedImageTypes__4=.bmp
      - FileUpload__AllowedContactTypes__0=.csv
      - FileUpload__AllowedContactTypes__1=.xlsx
      - FileUpload__AllowedContactTypes__2=.xls
      - FileUpload__AllowedContactTypes__3=.vcf
      - WhatsApp__ApiUrl=https://api.whatsapp.com/send
      - WhatsApp__ApiKey=
      - WhatsApp__BusinessNumber=
    volumes:
      - upload_data:/app/wwwroot/uploads
      - generated_data:/app/wwwroot/generated
    networks:
      - wedding_network
    restart: unless-stopped

volumes:
  postgres_data:
  upload_data:
  generated_data:

networks:
  wedding_network:
    driver: bridge
