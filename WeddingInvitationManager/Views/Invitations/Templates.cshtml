@model WeddingInvitationManager.Models.Event

@{
    ViewData["Title"] = "Invitation Templates";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h1>Invitation Templates</h1>
        <p class="text-muted mb-0">Manage templates for @Model.Name</p>
    </div>
    <div class="btn-group">
        <a asp-action="CreateTemplate" asp-route-eventId="@Model.Id" class="btn btn-primary">
            <i class="fas fa-plus"></i> Create Template
        </a>
        <a asp-action="CreateTemplateEnhanced" asp-route-eventId="@Model.Id" class="btn btn-success">
            <i class="fas fa-magic"></i> Enhanced Designer
        </a>
        <a asp-action="GenerateAdvanced" asp-route-eventId="@Model.Id" class="btn btn-info">
            <i class="fas fa-rocket"></i> Generate Invitations
        </a>
        <a asp-controller="Events" asp-action="Details" asp-route-id="@Model.Id" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left"></i> Back to Event
        </a>
    </div>
</div>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["Warning"] != null || (ViewBag.HasUnusedInvitations != null && (bool)ViewBag.HasUnusedInvitations))
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <h5><i class="fas fa-exclamation-triangle"></i> Existing Anonymous Invitations Found</h5>
        
        @* Display warning message from either TempData or ViewBag *@
        @if (TempData["Warning"] != null)
        {
            <p>@TempData["Warning"]</p>
        }
        else if (ViewBag.UnusedInvitationsWarning != null)
        {
            <p>@ViewBag.UnusedInvitationsWarning</p>
        }
        
        <hr>
        
        @* Show breakdown by download type when using ViewBag *@
        @if (ViewBag.UnusedInvitationsList != null)
        {
            <div class="mb-3">
                <strong>Breakdown:</strong>
                <ul class="mb-2">
                    @foreach (var group in (IEnumerable<dynamic>)ViewBag.UnusedInvitationsList)
                    {
                        <li>
                            @if (group.DownloadType.StartsWith("template:"))
                            {
                                <span>Template invitations: @group.Count</span>
                            }
                            else
                            {
                                <span>@group.DownloadType invitations: @group.Count</span>
                            }
                        </li>
                    }
                </ul>
            </div>
        }
        
        @* Action buttons - works with both approaches *@
        <div class="row">
            @* Download existing buttons - one for each download type *@
            @if (ViewBag.UnusedInvitationsList != null)
            {
                @foreach (var group in (IEnumerable<dynamic>)ViewBag.UnusedInvitationsList)
                {
                    <div class="col-md-6 mb-2">
                        <form method="post" asp-action="DownloadUnusedAnonymousInvitations" asp-route-eventId="@Model.Id" class="d-inline">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="downloadType" value="@(group.DownloadType.StartsWith("template:") ? "template" : group.DownloadType)" />
                            <button type="submit" class="btn btn-outline-primary w-100">
                                <i class="fas fa-download"></i> Download @group.Count Existing 
                                @(group.DownloadType.StartsWith("template:") ? "Template" : group.DownloadType) Invitations
                            </button>
                        </form>
                    </div>
                }
            }
            else
            {
                @* Fallback for TempData approach *@
                <div class="col-md-6">
                    <form method="post" asp-action="DownloadExistingAnonymousInvitations" asp-route-eventId="@Model.Id" class="d-inline">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="downloadType" value="@TempData["PendingDownloadType"]" />
                        <button type="submit" class="btn btn-outline-primary">
                            <i class="fas fa-download"></i> Download Existing Ones
                        </button>
                    </form>
                </div>
                <div class="col-md-6">
                    <form method="post" asp-action="ConfirmNewAnonymousInvitations" asp-route-eventId="@Model.Id" class="d-inline">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="guestCount" value="@TempData["PendingGuestCount"]" />
                        <input type="hidden" name="downloadType" value="@TempData["PendingDownloadType"]" />
                        <input type="hidden" name="templateId" value="@TempData["PendingTemplateId"]" />
                        <button type="submit" class="btn btn-warning">
                            <i class="fas fa-plus"></i> Generate New Ones
                        </button>
                    </form>
                </div>
            }
        </div>
        
        @* Generate new invitations section - always available *@
        <div class="mt-3">
            <h6>Or generate new anonymous invitations:</h6>
            <div class="row">
                <div class="col-md-4">
                    <button type="button" class="btn btn-success w-100" onclick="showAnonymousInvitationForm('qr-only')">
                        <i class="fas fa-qrcode"></i> Generate New QR-Only
                    </button>
                </div>
                <div class="col-md-4">
                    <button type="button" class="btn btn-info w-100" onclick="showAnonymousInvitationForm('template')">
                        <i class="fas fa-image"></i> Generate New Template
                    </button>
                </div>
                <div class="col-md-4">
                    <button type="button" class="btn btn-secondary w-100" data-bs-dismiss="alert">
                        <i class="fas fa-times"></i> Dismiss
                    </button>
                </div>
            </div>
        </div>
        
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (!Model.Templates.Any())
{
    <div class="text-center py-5">
        <i class="fas fa-images fa-3x text-muted mb-3"></i>
        <h3 class="text-muted">No Templates Yet</h3>
        <p class="text-muted">Create your first invitation template to start generating personalized invitations.</p>
        <a asp-action="CreateTemplate" asp-route-eventId="@Model.Id" class="btn btn-primary">
            <i class="fas fa-plus"></i> Create Your First Template
        </a>
    </div>
}
else
{
    <!-- Templates Grid -->
    <div class="row">
        @foreach (var template in Model.Templates)
        {
            <div class="col-md-6 col-lg-4 mb-4">
                <div class="card h-100">
                    @if (!string.IsNullOrEmpty(template.ImagePath))
                    {
                        <img src="@template.ImagePath" class="card-img-top" alt="@template.Name" style="height: 200px; object-fit: cover;">
                    }
                    <div class="card-body">
                        <h5 class="card-title d-flex justify-content-between align-items-center">
                            @template.Name
                            <div>
                                @if (template.IsDefault)
                                {
                                    <span class="badge bg-primary">Default</span>
                                }
                                @if (template.IsVipTemplate)
                                {
                                    <span class="badge bg-warning">VIP</span>
                                }
                            </div>
                        </h5>
                        <div class="row text-center">
                            <div class="col-4">
                                <small class="text-muted">QR X</small><br>
                                <strong>@template.QRPositionX</strong>
                            </div>
                            <div class="col-4">
                                <small class="text-muted">QR Y</small><br>
                                <strong>@template.QRPositionY</strong>
                            </div>
                            <div class="col-4">
                                <small class="text-muted">Size</small><br>
                                <strong>@template.QRSize</strong>
                            </div>
                        </div>
                        <small class="text-muted d-block mt-2">
                            Created: @template.CreatedAt.ToString("MMM dd, yyyy")
                        </small>
                    </div>
                    <div class="card-footer bg-transparent">
                        <div class="btn-group w-100" role="group">
                            <button type="button" class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#previewModal" onclick="previewTemplate('@template.ImagePath', '@template.Name')">
                                <i class="fas fa-eye"></i> Preview
                            </button>
                            <form asp-action="DeleteTemplate" asp-route-id="@template.Id" asp-route-eventId="@Model.Id" method="post" class="d-inline" onsubmit="return confirm('Are you sure you want to delete this template?')">
                                <button type="submit" class="btn btn-outline-danger btn-sm">
                                    <i class="fas fa-trash"></i> Delete
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    
    <!-- Action Buttons -->
    <div class="row mt-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Template Actions</h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2 d-md-flex">
                        <a asp-action="Send" asp-route-eventId="@Model.Id" class="btn btn-success">
                            <i class="fas fa-paper-plane"></i> Generate & Send Invitations
                        </a>
                        <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#downloadModal">
                            <i class="fas fa-download"></i> Download All Invitations
                        </button>
                        <button type="button" class="btn btn-outline-success" data-bs-toggle="modal" data-bs-target="#anonymousModal">
                            <i class="fas fa-user-plus"></i> Generate Anonymous Invitations
                        </button>
                        <a asp-action="DownloadTemplates" asp-route-eventId="@Model.Id" class="btn btn-outline-secondary">
                            <i class="fas fa-file-archive"></i> Download Templates
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<!-- Preview Modal -->
<div class="modal fade" id="previewModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="previewModalLabel">Template Preview</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body text-center">
                <img id="previewImage" src="" alt="Template Preview" class="img-fluid" style="max-height: 500px;">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function previewTemplate(imagePath, templateName) {
            document.getElementById('previewImage').src = imagePath;
            document.getElementById('previewModalLabel').textContent = templateName + ' - Preview';
        }
    </script>
}

<!-- Download All Invitations Modal -->
<div class="modal fade" id="downloadModal" tabindex="-1" aria-labelledby="downloadModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="downloadModalLabel">
                    <i class="fas fa-download"></i> Download All Invitations
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i>
                    Choose what type of invitations you want to download. This will include ALL contacts, regardless of whether invitations have been sent or not.
                </div>
                
                <form id="downloadForm" method="post" asp-action="DownloadAllInvitationsWithAnonymous" asp-route-eventId="@Model.Id">
                    @Html.AntiForgeryToken()
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="card h-100">
                                <div class="card-body text-center">
                                    <div class="mb-3">
                                        <i class="fas fa-image fa-3x text-primary"></i>
                                    </div>
                                    <h6 class="card-title">Full Invitation Templates</h6>
                                    <p class="card-text small text-muted">
                                        Download complete invitation images with your template design and embedded QR codes for each contact.
                                    </p>
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="downloadType" id="templateOption" value="template" checked>
                                        <label class="form-check-label" for="templateOption">
                                            <strong>With Templates</strong>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="card h-100">
                                <div class="card-body text-center">
                                    <div class="mb-3">
                                        <i class="fas fa-qrcode fa-3x text-success"></i>
                                    </div>
                                    <h6 class="card-title">QR Codes Only</h6>
                                    <p class="card-text small text-muted">
                                        Download just the QR code images for each contact. Useful if you want to print them separately or use your own design.
                                    </p>
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="downloadType" id="qrOption" value="qr-only">
                                        <label class="form-check-label" for="qrOption">
                                            <strong>QR Codes Only</strong>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Template Selection (only shown when template option is selected) -->
                    <div id="templateSelection" class="mt-3">
                        @if (Model.Templates.Any())
                        {
                            <div class="row">
                                <div class="col-12">
                                    <label class="form-label">Select Template:</label>
                                    <select name="templateId" class="form-select">
                                        <option value="">Use Default Template</option>
                                        @foreach (var template in Model.Templates)
                                        {
                                            <option value="@template.Id" selected="@(template.IsDefault)">
                                                @template.Name @(template.IsDefault ? "(Default)" : "")
                                            </option>
                                        }
                                    </select>
                                </div>
                            </div>
                        }
                    </div>
                    
                    <!-- Anonymous Guest Count -->
                    <div class="mt-3">
                        <div class="row">
                            <div class="col-12">
                                <div class="alert alert-info small">
                                    <i class="fas fa-info-circle"></i>
                                    <strong>Anonymous Guests:</strong> Add extra invitations for unknown guests (walk-ins, plus-ones, etc.)
                                </div>
                                <label class="form-label">Number of Anonymous Guest Invitations:</label>
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="fas fa-users"></i>
                                    </span>
                                    <input type="number" name="anonymousGuestCount" class="form-control" 
                                           min="0" max="500" value="0" 
                                           placeholder="Enter number of anonymous invitations (0-500)">
                                </div>
                                <small class="text-muted">
                                    These will be named "Guest 1", "Guest 2", etc. (or "ضيف ١", "ضيف ٢" in Arabic)
                                </small>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cancel
                </button>
                <button type="button" class="btn btn-primary" onclick="submitDownload()">
                    <i class="fas fa-download"></i> Download
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    // Show/hide template selection based on download type
    document.addEventListener('DOMContentLoaded', function() {
        const templateOption = document.getElementById('templateOption');
        const qrOption = document.getElementById('qrOption');
        const templateSelection = document.getElementById('templateSelection');
        
        function toggleTemplateSelection() {
            if (qrOption.checked) {
                templateSelection.style.display = 'none';
            } else {
                templateSelection.style.display = 'block';
            }
        }
        
        templateOption.addEventListener('change', toggleTemplateSelection);
        qrOption.addEventListener('change', toggleTemplateSelection);
        
        // Initial state
        toggleTemplateSelection();
    });
    
    function submitDownload() {
        const form = document.getElementById('downloadForm');
        const button = event.target;
        
        // Show loading state
        button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Generating...';
        button.disabled = true;
        
        // Submit form
        form.submit();
    }
    
    function submitAnonymousDownload() {
        const form = document.getElementById('anonymousForm');
        const button = event.target;
        const guestCount = document.getElementById('anonymousGuestCount').value;
        const downloadType = document.getElementById('anonymousDownloadType').value;
        
        if (!guestCount || guestCount <= 0) {
            alert('Please enter a valid number of guests (1 or more).');
            return;
        }
        
        if (guestCount > 500) {
            alert('Maximum 500 anonymous invitations allowed.');
            return;
        }
        
        // Show loading state
        const originalText = button.innerHTML;
        button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Generating...';
        button.disabled = true;
        
        // Create a hidden iframe to handle the download
        const iframe = document.createElement('iframe');
        iframe.style.display = 'none';
        iframe.onload = function() {
            // Reset button after a short delay to allow download to start
            setTimeout(() => {
                button.innerHTML = originalText;
                button.disabled = false;
                
                // Show success message
                const successDiv = document.createElement('div');
                successDiv.className = 'alert alert-success alert-dismissible fade show mt-3';
                successDiv.innerHTML = `
                    <i class="fas fa-check-circle"></i> 
                    Successfully generated ${guestCount} anonymous ${downloadType === 'qr-only' ? 'QR codes' : 'invitations'}!
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                `;
                form.parentNode.insertBefore(successDiv, form.nextSibling);
                
                // Auto-dismiss success message after 5 seconds
                setTimeout(() => {
                    if (successDiv.parentNode) {
                        successDiv.remove();
                    }
                }, 5000);
                
                // Remove iframe
                document.body.removeChild(iframe);
            }, 2000);
        };
        
        // Submit form through iframe
        form.target = iframe.name = 'download-frame-' + Date.now();
        iframe.name = form.target;
        document.body.appendChild(iframe);
        
        // Submit form
        form.submit();
        
        // Reset form target
        setTimeout(() => {
            form.target = '';
        }, 100);
    }

    function toggleAnonymousTemplateSelection() {
        const downloadType = document.getElementById('anonymousDownloadType').value;
        const templateSection = document.getElementById('anonymousTemplateSection');
        
        if (downloadType === 'qr-only') {
            templateSection.style.display = 'none';
        } else {
            templateSection.style.display = 'block';
        }
    }

    // Function to show anonymous invitation form with pre-selected download type
    function showAnonymousInvitationForm(downloadType) {
        // Open the anonymous invitation modal
        var anonymousModal = new bootstrap.Modal(document.getElementById('anonymousModal'));
        anonymousModal.show();
        
        // Set the download type if there's a radio button or select
        const downloadTypeInput = document.querySelector('input[name="downloadType"][value="' + downloadType + '"]');
        if (downloadTypeInput) {
            downloadTypeInput.checked = true;
            // Trigger change event to update UI if needed
            downloadTypeInput.dispatchEvent(new Event('change'));
        }
        
        // If it's template type, make sure template selection is visible
        if (downloadType === 'template') {
            toggleAnonymousTemplateSelection();
        }
    }

    // Initialize template section visibility on page load
    document.addEventListener('DOMContentLoaded', function() {
        toggleAnonymousTemplateSelection();
    });
</script>

<!-- Anonymous Invitations Modal -->
<div class="modal fade" id="anonymousModal" tabindex="-1" aria-labelledby="anonymousModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="anonymousModalLabel">
                    <i class="fas fa-user-plus"></i> Generate Anonymous Guest Invitations
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i>
                    Generate invitations for unknown guests (walk-ins, plus-ones, etc.). These will be numbered sequentially to help guards identify guests.
                </div>
                
                <form id="anonymousForm" method="post" asp-action="GenerateAnonymousInvitations" asp-route-eventId="@Model.Id">
                    @Html.AntiForgeryToken()
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="anonymousGuestCount" class="form-label">
                                    <i class="fas fa-users"></i> Number of Anonymous Invitations:
                                </label>
                                <input type="number" id="anonymousGuestCount" name="guestCount" 
                                       class="form-control form-control-lg text-center" 
                                       min="1" max="500" value="10" required>
                                <small class="text-muted">Maximum: 500 invitations</small>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">
                                    <i class="fas fa-download"></i> Download Type:
                                </label>
                                <select name="downloadType" id="anonymousDownloadType" class="form-select" onchange="toggleAnonymousTemplateSelection()">
                                    <option value="template">Full Invitation Templates</option>
                                    <option value="qr-only">QR Codes Only</option>
                                </select>
                                <small class="text-muted">Choose between complete invitation designs or just QR codes</small>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row" id="anonymousTemplateSection">
                        <div class="col-12">
                            <div class="mb-3">
                                <label class="form-label">
                                    <i class="fas fa-image"></i> Template:
                                </label>
                                @if (Model.Templates.Any())
                                {
                                    <select name="templateId" class="form-select">
                                        <option value="">Use Default Template</option>
                                        @foreach (var template in Model.Templates)
                                        {
                                            <option value="@template.Id" selected="@(template.IsDefault)">
                                                @template.Name @(template.IsDefault ? "(Default)" : "")
                                            </option>
                                        }
                                    </select>
                                }
                                else
                                {
                                    <div class="alert alert-warning small">
                                        <i class="fas fa-exclamation-triangle"></i>
                                        No templates available. Please create a template first.
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-12">
                            <div class="alert alert-success small">
                                <i class="fas fa-check-circle"></i>
                                <strong>Guest Naming:</strong> Invitations will be named:
                                <ul class="mb-0 mt-2">
                                    <li><strong>English:</strong> "Guest 1", "Guest 2", "Guest 3", etc.</li>
                                    <li><strong>Arabic:</strong> "ضيف ١", "ضيف ٢", "ضيف ٣", etc.</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Cancel
                </button>
                <button type="button" class="btn btn-success" onclick="submitAnonymousDownload()">
                    <i class="fas fa-download"></i> Generate & Download
                </button>
            </div>
        </div>
    </div>
</div>
